(function(i,p){typeof exports=="object"&&typeof module<"u"?p(exports,require("@tanstack/vue-query"),require("vue")):typeof define=="function"&&define.amd?define(["exports","@tanstack/vue-query","vue"],p):(i=typeof globalThis<"u"?globalThis:i||self,p(i.VueQueryRequestUtils={},i.VueQuery,i.Vue))})(this,function(i,p,a){"use strict";const v=Symbol("api");function w(){const e=a.inject(v);if(e)return e}function $(e){return{install(t){t.provide(v,e)}}}const y=e=>typeof e=="string"||typeof e=="number"||typeof e=="boolean";class d extends Error{constructor(t){super(`[useGet] ${t}`),this.name="UseGetError"}}const b=e=>{const t=a.toValue(e);if(Array.isArray(t))return t.map(b);if(t&&typeof t=="object"&&!Array.isArray(t)){const o={};for(const r in t)o[r]=b(t[r]);return o}return t},g=(e,t="paramRef")=>{if(e!=null&&!y(e)){if(Array.isArray(e)){e.forEach((o,r)=>{if(!y(o))throw new d(`[${t}[${r}]] must be string | number | boolean, got ${typeof o}`)});return}if(typeof e=="object"){if("path"in e||"query"in e){if(e.path&&(!Array.isArray(e.path)||!e.path.every(y)))throw new d(`[${t}.path] must be an array of string | number | boolean`);if(e.query&&(typeof e.query!="object"||Array.isArray(e.query)))throw new d(`[${t}.query] must be a plain object`);if(e.query){for(const[o,r]of Object.entries(e.query))if(!y(r)&&!(Array.isArray(r)&&r.every(y)))throw new d(`[${t}.query.${o}] must be string | number | boolean or array of those`)}return}for(const[o,r]of Object.entries(e))if(!y(r)&&!(Array.isArray(r)&&r.every(y)))throw new d(`[${t}.${o}] must be string | number | boolean or array of those`);return}throw new d(`[${t}] Unsupported type: ${typeof e}`)}},j=(e,t)=>{let o=[],r={};const n=a.toValue(t);if(n==null)return e;y(n)?o=[String(n)]:Array.isArray(n)?o=n.map(String):typeof n=="object"&&("path"in n||"query"in n?(Array.isArray(n.path)&&(o=n.path.map(String)),n.query&&typeof n.query=="object"&&!Array.isArray(n.query)&&(r=n.query)):r=n);const c=o.length>0?`/${o.join("/")}`:"",l=Object.keys(r).length>0?`?${new URLSearchParams(Object.entries(r).flatMap(([s,f])=>Array.isArray(f)?f.map(u=>[s,String(u)]):[[s,String(f)]])).toString()}`:"";return`${e}${c}${l}`};function S({url:e,queryKey:t,API:o,options:r,paramRef:n}){if(!e||typeof e!="string")throw new Error("Invalid or missing URL");const c=a.isRef(n)||typeof n=="function"?n:a.ref(n),l=a.computed(()=>a.toValue(t).map(b)),s=w(),f=o??s;if(!f)throw new Error("No API instance provided, please provide an api instance via the API prop or use the provideApi function.");return p.useQuery({queryKey:l.value,queryFn:async()=>{const u=b(c);g(u);const q=u!=null?j(e,u):e;return(await f.get(q)).data},...r})}function k({method:e,url:t,API:o,requestConfig:r,options:n,mutationKey:c}){const l=w(),s=o??l,f=a.computed(()=>c?Array.isArray(c)?c:[c]:void 0);if(!s)throw new Error("No API instance provided, please provide an api instance via the API prop or use the provideApi function.");const u=e.toLowerCase();return p.useMutation({mutationKey:f.value,mutationFn:async q=>{let A;const h=q??{};switch(u){case"post":A=await s.post(t,h,r);break;case"put":A=await s.put(t,h,r);break;case"patch":A=await s.patch(t,h,r);break;case"delete":A=await s.delete(t,{...r,data:h});break;default:throw new Error(`HTTP method not supported: ${e}`)}return A.data},...n})}i.provideApi=$,i.useApi=w,i.useGet=S,i.useSend=k,Object.defineProperty(i,Symbol.toStringTag,{value:"Module"})});
