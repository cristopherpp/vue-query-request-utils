(function(e,o){typeof exports=="object"&&typeof module<"u"?o(exports,require("@tanstack/vue-query"),require("vue")):typeof define=="function"&&define.amd?define(["exports","@tanstack/vue-query","vue"],o):(e=typeof globalThis<"u"?globalThis:e||self,o(e.VueQueryRequestUtils={},e.VueQuery,e.Vue))})(this,function(e,o,c){"use strict";const f=Symbol("api");function d(){const t=c.inject(f);if(!t)throw new Error("No API instance provided. You must call provideApi() in your app setup.");return t}function w(t){return{install(r){r.provide(f,t)}}}function h({url:t,queryKey:r,API:y,options:a,paramRef:p}){const s=c.computed(()=>c.unref(r)),l=d(),n=y??l;if(!n)throw new Error("No Axios instance provided. Either pass API param or install your API plugin.");return o.useQuery({queryKey:s.value,queryFn:async({queryKey:A})=>{const i=t;if(!i)throw new Error(`API inválida para el queryKey: ${A.join(", ")}`);return(await n.get(i,{params:p||{}})).data},...a})}function v({method:t,url:r,API:y,requestConfig:a,options:p,mutationKey:s}){const l=d(),n=y??l;if(!n)throw new Error("No Axios instance provided. Either pass API param or install your API plugin.");return o.useMutation({mutationKey:s?Array.isArray(s)?s:[s]:void 0,mutationFn:async A=>{let i;const u=A??{};switch(t){case"post":i=await n.post(r,u,a);break;case"put":i=await n.put(r,u,a);break;case"patch":i=await n.patch(r,u,a);break;case"delete":i=await n.delete(r,{...a,data:u});break;default:throw new Error(`Método HTTP no soportado: ${t}`)}return i.data},...p})}e.provideApi=w,e.useApi=d,e.useGet=h,e.useSend=v,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});
