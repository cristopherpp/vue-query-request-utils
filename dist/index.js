(function(i,p){typeof exports=="object"&&typeof module<"u"?p(exports,require("@tanstack/vue-query"),require("vue")):typeof define=="function"&&define.amd?define(["exports","@tanstack/vue-query","vue"],p):(i=typeof globalThis<"u"?globalThis:i||self,p(i.VueQueryRequestUtils={},i.VueQuery,i.Vue))})(this,function(i,p,u){"use strict";const $=Symbol("api");function A(){const e=u.inject($);if(!e)throw new Error("No API instance provided. You must call provideApi() in your app setup.");return e}function b(e){return{install(r){r.provide($,e)}}}function j(e=""){return{async get(r){const n=await fetch(`${e}${r}`);if(!n.ok)throw new Error(`HTTP error! Status: ${n.status}`);return{data:await n.json()}},async post(r,n){const t=await fetch(`${e}${r}`,{method:"POST",headers:{"Content-Type":"application/json"},body:n?JSON.stringify(n):void 0});if(!t.ok)throw new Error(`HTTP error! Status: ${t.status}`);return{data:await t.json()}},async put(r,n){const t=await fetch(`${e}${r}`,{method:"PUT",headers:{"Content-Type":"application/json"},body:n?JSON.stringify(n):void 0});if(!t.ok)throw new Error(`HTTP error! Status: ${t.status}`);return{data:await t.json()}},async patch(r,n){const t=await fetch(`${e}${r}`,{method:"PATCH",headers:{"Content-Type":"application/json"},body:n?JSON.stringify(n):void 0});if(!t.ok)throw new Error(`HTTP error! Status: ${t.status}`);return{data:await t.json()}},async delete(r,n){const t=await fetch(`${e}${r}`,{method:"DELETE",headers:{"Content-Type":"application/json"},body:n?JSON.stringify(n):void 0});if(!t.ok)throw new Error(`HTTP error! Status: ${t.status}`);return{data:await t.json()}}}}const c=e=>typeof e=="string"||typeof e=="number"||typeof e=="boolean";class d extends Error{constructor(r){super(`[useGet] ${r}`),this.name="UseGetError"}}const l=e=>{const r=u.toValue(e);if(Array.isArray(r))return r.map(l);if(r&&typeof r=="object"&&!Array.isArray(r)){const n={};for(const t in r)n[t]=l(r[t]);return n}return r},v=(e,r="paramRef")=>{if(e!=null&&!c(e)){if(Array.isArray(e)){e.forEach((n,t)=>{if(!c(n))throw new d(`[${r}[${t}]] must be string | number | boolean, got ${typeof n}`)});return}if(typeof e=="object"){if("path"in e||"query"in e){if(e.path&&(!Array.isArray(e.path)||!e.path.every(c)))throw new d(`[${r}.path] must be an array of string | number | boolean`);if(e.query&&(typeof e.query!="object"||Array.isArray(e.query)))throw new d(`[${r}.query] must be a plain object`);if(e.query){for(const[n,t]of Object.entries(e.query))if(!c(t)&&!(Array.isArray(t)&&t.every(c)))throw new d(`[${r}.query.${n}] must be string | number | boolean or array of those`)}return}for(const[n,t]of Object.entries(e))if(!c(t)&&!(Array.isArray(t)&&t.every(c)))throw new d(`[${r}.${n}] must be string | number | boolean or array of those`);return}throw new d(`[${r}] Unsupported type: ${typeof e}`)}},g=(e,r)=>{let n=[],t={};const o=u.toValue(r);if(o==null)return e;c(o)?n=[String(o)]:Array.isArray(o)?n=o.map(String):typeof o=="object"&&("path"in o||"query"in o?(Array.isArray(o.path)&&(n=o.path.map(String)),o.query&&typeof o.query=="object"&&!Array.isArray(o.query)&&(t=o.query)):t=o);const y=n.length>0?`/${n.join("/")}`:"",h=Object.keys(t).length>0?`?${new URLSearchParams(Object.entries(t).flatMap(([s,f])=>Array.isArray(f)?f.map(a=>[s,String(a)]):[[s,String(f)]])).toString()}`:"";return`${e}${y}${h}`};function q({url:e,queryKey:r,API:n,options:t,paramRef:o}){if(!e||typeof e!="string")throw new Error("Invalid or missing URL");const y=u.isRef(o)||typeof o=="function"?o:u.ref(o),h=u.computed(()=>u.toValue(r).map(l)),s=A(),f=n??s;if(!f)throw new Error("No API instance provided, please provide an api instance via the API prop or use the provideApi function");return p.useQuery({queryKey:h.value,queryFn:async()=>{const a=l(y);v(a);const w=a!=null?g(e,a):e;return(await f.get(w)).data},...t})}function S({method:e,url:r,API:n,requestConfig:t,options:o,mutationKey:y}){const h=A(),s=n??h,f=u.computed(()=>y?Array.isArray(y)?y:[y]:void 0);if(!s)throw new Error("No API instance provided, please provide an api instance via the API prop or use the provideApi function.");return e.toLowerCase(),p.useMutation({mutationKey:f.value,mutationFn:async a=>{const w=a??{};return(await(s instanceof Object&&"defaults"in s?s[e](r,w,t):s[e](r,w))).data},...o})}i.createFetchClient=j,i.provideApi=b,i.useApi=A,i.useGet=q,i.useSend=S,Object.defineProperty(i,Symbol.toStringTag,{value:"Module"})});
